---
// testimonials.astro
const testimonials = [
  {
    name: "Carlos Rodríguez",
    role: "Entrepreneur",
    text:
      "Lic. Paniagua assisted me in setting up my company. His professionalism and expertise made the process quick and seamless.",
    stars: 5,
    image: "images/avatar1.png",
  },
  {
    name: "María González",
    role: "Private Client",
    text:
      "Excellent service during my divorce process. I felt supported and well-advised throughout. I highly recommend his services.",
    stars: 5,
    image: "images/avatar2.png",
  },
  {
    name: "Juan Pérez",
    role: "Real Estate Manager",
    text:
      "We have worked with Lic. Paniagua on multiple real estate transactions. His precision and efficiency are unmatched. A top-tier professional.",
    stars: 5,
    image: "images/avatar3.png",
  },
  {
    name: "Laura Sánchez",
    role: "Financial Director",
    text:
      "The legal advice we received for our company was exceptional. Lic. Paniagua has in-depth, up-to-date legal knowledge.",
    stars: 5,
    image: "images/avatar2.png",
  },
];

---

<section id="testimonials" class="py-24 md:py-32 bg-black text-white">
  <div class="container">
    <div class="text-center max-w-3xl mx-auto mb-16">
        <span class="text-gold text-sm font-medium uppercase tracking-wider">Testimonials</span>
        <h2 class="text-3xl md:text-4xl font-bold mt-2 mb-6">What Our Clients Say</h2>
        <p class="text-gray-400">
          Our clients' satisfaction is our best introduction. Discover the experiences of those who have trusted our services.
        </p>
      </div>      
    <div class="testimonials-carousel max-w-4xl mx-auto opacity-0 translate-y-10 transform transition-all duration-700">
      <div class="relative bg-gray-900 rounded-2xl p-8 md:p-12">
        <div class="absolute top-0 left-0 transform -translate-x-1/2 -translate-y-1/2">
          <div class="text-6xl text-gold opacity-20">"</div>
        </div>

        {testimonials.map((testimonio, index: number) => (
          <div class={`flex flex-col md:flex-row gap-8 items-center testimonio-item ${index === 0 ? 'active' : 'hidden'}`} data-index={index}>
            <div class="w-full md:w-1/3 flex flex-col items-center md:items-start">
              <div class="w-20 h-20 rounded-full overflow-hidden mb-4">
                <img
                  src={testimonio.image || "/placeholder.svg"}
                  alt={testimonio.name}
                  class="w-full h-full object-cover"
                />
              </div>
              <h3 class="text-xl font-semibold">{testimonio.name}</h3>
              <p class="text-gold text-sm">{testimonio.role}</p>
              <div class="flex mt-2">
                {Array(testimonio.stars).fill(null).map((_, i) => (
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 fill-gold text-gold" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z" />
            </svg>
            ))}
              </div>
            </div>

            <div class="w-full md:w-2/3">
              <p class="text-gray-300 text-lg italic leading-relaxed">"{testimonio.text}"</p>
            </div>
          </div>
        ))}

        <div class="flex justify-center mt-8 gap-4">
          <button
            id="prevTestimonio"
            class="p-2 rounded-full bg-gray-800 hover:bg-gold/20 transition-colors"
            aria-label="Testimonio anterior"
          >
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gold" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <polyline points="15 18 9 12 15 6" />
            </svg>
          </button>
          <button
            id="nextTestimonio"
            class="p-2 rounded-full bg-gray-800 hover:bg-gold/20 transition-colors"
            aria-label="Siguiente testimonio"
          >
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gold" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <polyline points="9 18 15 12 9 6" />
            </svg>
          </button>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  // Intersection Observer for animation on scroll
  const testimonialsCarousel = document.querySelector('.testimonials-carousel');
  
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.remove('opacity-0', 'translate-y-10');
        entry.target.classList.add('opacity-100', 'translate-y-0');
        observer.unobserve(entry.target);
      }
    });
  }, { threshold: 0.2 });
  
  if (testimonialsCarousel) {
    observer.observe(testimonialsCarousel);
  }

  // Carousel functionality
  let currentIndex = 0;
  const testimonioItems = document.querySelectorAll('.testimonio-item');
  const prevButton = document.getElementById('prevTestimonio');
  const nextButton = document.getElementById('nextTestimonio');
  
  function showTestimonio(index: number) {
    testimonioItems.forEach((item, i) => {
      if (i === index) {
        item.classList.remove('hidden');
        item.classList.add('active');
      } else {
        item.classList.add('hidden');
        item.classList.remove('active');
      }
    });
  }
  
  function nextTestimonio() {
    currentIndex = currentIndex === testimonioItems.length - 1 ? 0 : currentIndex + 1;
    showTestimonio(currentIndex);
  }
  
  function prevTestimonio() {
    currentIndex = currentIndex === 0 ? testimonioItems.length - 1 : currentIndex - 1;
    showTestimonio(currentIndex);
  }
  
  prevButton?.addEventListener('click', prevTestimonio);
  nextButton?.addEventListener('click', nextTestimonio);
</script>

<style>
  .text-gold {
    color: #d4af37;
  }
  
  .fill-gold {
    fill: #d4af37;
  }
  
  .container {
    width: 100%;
    max-width: 1280px;
    margin-left: auto;
    margin-right: auto;
    padding-left: 1rem;
    padding-right: 1rem;
  }
  
  /* Add transition for carousel items */
  .testimonio-item {
    transition: opacity 0.3s ease-in-out;
  }
  
  .testimonio-item.active {
    opacity: 1;
  }
  
  .testimonio-item.hidden {
    display: none;
    opacity: 0;
  }
</style>